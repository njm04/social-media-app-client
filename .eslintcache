[{"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\index.tsx":"1","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\reportWebVitals.ts":"2","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\App.tsx":"3","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\login.tsx":"4","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\copyRight.tsx":"5","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\newsFeed.tsx":"6","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\configureStore.ts":"7","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\reducer.ts":"8","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\services\\httpService.ts":"9","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\auth.ts":"10","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\middleware\\api.ts":"11","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\entities.ts":"12","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\api.ts":"13","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\privateRoute.tsx":"14","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\services\\authService.ts":"15","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\navBar.tsx":"16","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\post.tsx":"17","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\posts.ts":"18","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\utils\\utils.ts":"19","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\comment.tsx":"20","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\comments.ts":"21","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\commentCount.ts":"22","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\firebase.config.ts":"23","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\imageUploadGrid.tsx":"24","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\images.ts":"25","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\likes.ts":"26","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\postMenu.tsx":"27","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\editPostModal.tsx":"28","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\profile.tsx":"29","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\postCards.tsx":"30","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\editProfileModal.tsx":"31","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\users.ts":"32","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\root.tsx":"33","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\postField.tsx":"34","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\profileAvatar.tsx":"35","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\deleteModal.tsx":"36","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\search.tsx":"37","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\services\\searchFriendService.ts":"38","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\friendList.tsx":"39","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\friends.ts":"40","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\notifications.tsx":"41"},{"size":744,"mtime":1609152994118,"results":"42","hashOfConfig":"43"},{"size":425,"mtime":499162500000,"results":"44","hashOfConfig":"43"},{"size":1000,"mtime":1613531672461,"results":"45","hashOfConfig":"43"},{"size":4394,"mtime":1609730637740,"results":"46","hashOfConfig":"43"},{"size":466,"mtime":1608081805151,"results":"47","hashOfConfig":"43"},{"size":1615,"mtime":1613437435986,"results":"48","hashOfConfig":"43"},{"size":351,"mtime":1609881888221,"results":"49","hashOfConfig":"43"},{"size":444,"mtime":1608275930106,"results":"50","hashOfConfig":"43"},{"size":873,"mtime":1612137878206,"results":"51","hashOfConfig":"43"},{"size":2271,"mtime":1613629006342,"results":"52","hashOfConfig":"43"},{"size":963,"mtime":1609232899277,"results":"53","hashOfConfig":"43"},{"size":622,"mtime":1613432566943,"results":"54","hashOfConfig":"43"},{"size":541,"mtime":1608720934917,"results":"55","hashOfConfig":"43"},{"size":520,"mtime":1609732989926,"results":"56","hashOfConfig":"43"},{"size":1255,"mtime":1608197531583,"results":"57","hashOfConfig":"43"},{"size":9272,"mtime":1613629016802,"results":"58","hashOfConfig":"43"},{"size":897,"mtime":1609890737444,"results":"59","hashOfConfig":"43"},{"size":4249,"mtime":1610574981079,"results":"60","hashOfConfig":"43"},{"size":1434,"mtime":1610577583455,"results":"61","hashOfConfig":"43"},{"size":6392,"mtime":1612153810148,"results":"62","hashOfConfig":"43"},{"size":3806,"mtime":1611299619800,"results":"63","hashOfConfig":"43"},{"size":1637,"mtime":1610574278412,"results":"64","hashOfConfig":"43"},{"size":633,"mtime":1608950011533,"results":"65","hashOfConfig":"43"},{"size":1635,"mtime":1610574626850,"results":"66","hashOfConfig":"43"},{"size":3019,"mtime":1610574544329,"results":"67","hashOfConfig":"43"},{"size":2978,"mtime":1610574796713,"results":"68","hashOfConfig":"43"},{"size":4017,"mtime":1611301668052,"results":"69","hashOfConfig":"43"},{"size":6249,"mtime":1611285389998,"results":"70","hashOfConfig":"43"},{"size":11374,"mtime":1613537281792,"results":"71","hashOfConfig":"43"},{"size":8856,"mtime":1612153788918,"results":"72","hashOfConfig":"43"},{"size":9361,"mtime":1610575544861,"results":"73","hashOfConfig":"43"},{"size":3221,"mtime":1613619360322,"results":"74","hashOfConfig":"43"},{"size":488,"mtime":1609731571774,"results":"75","hashOfConfig":"43"},{"size":5912,"mtime":1610577757276,"results":"76","hashOfConfig":"43"},{"size":1188,"mtime":1611282661133,"results":"77","hashOfConfig":"43"},{"size":4016,"mtime":1611289742471,"results":"78","hashOfConfig":"43"},{"size":2922,"mtime":1613616983505,"results":"79","hashOfConfig":"43"},{"size":423,"mtime":1612146937607,"results":"80","hashOfConfig":"43"},{"size":2524,"mtime":1612147549355,"results":"81","hashOfConfig":"43"},{"size":5206,"mtime":1613619203694,"results":"82","hashOfConfig":"43"},{"size":6239,"mtime":1613623270373,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"10t8t05",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"86"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"86"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\index.tsx",[],["169","170"],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\reportWebVitals.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\App.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\login.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\copyRight.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\newsFeed.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\configureStore.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\reducer.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\services\\httpService.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\auth.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\middleware\\api.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\entities.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\api.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\privateRoute.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\services\\authService.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\navBar.tsx",["171"],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\post.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\posts.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\utils\\utils.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\comment.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\comments.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\commentCount.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\firebase.config.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\imageUploadGrid.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\images.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\likes.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\postMenu.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\editPostModal.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\profile.tsx",["172"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { getUserPosts, loadPosts } from \"../store/posts\";\r\nimport { loadImages, getImages } from \"../store/images\";\r\nimport { getProfilePicture, getCoverPhoto } from \"../store/users\";\r\nimport {\r\n  loadFriends,\r\n  addFriend,\r\n  isFriends,\r\n  isCancelled,\r\n  isAccepted,\r\n  getFriends,\r\n  cancelFriendRequest,\r\n  isAddFriendRequested,\r\n  confirmFriendRequest,\r\n} from \"../store/friends\";\r\nimport { IFriendRequest } from \"../interfaces/friends\";\r\nimport { IAuthUser } from \"../interfaces/auth\";\r\nimport { getUser } from \"../store/auth\";\r\nimport { loadUsers } from \"../store/users\";\r\nimport { loadLikes } from \"../store/likes\";\r\nimport { getInitials } from \"../utils/utils\";\r\nimport EditPostModal from \"./editPostModal\";\r\nimport PostCard from \"./common/postCards\";\r\nimport EditProfileModal from \"./editProfileModal\";\r\nimport PostField from \"./common/postField\";\r\n\r\nexport interface ProfileProps {\r\n  location: any;\r\n  name: string;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      marginTop: \"80px\",\r\n    },\r\n    paper: {\r\n      // margin: `${theme.spacing(1)}px auto`,\r\n      padding: theme.spacing(2),\r\n    },\r\n    avatar: {\r\n      marginTop: 235,\r\n      width: 180,\r\n      height: 180,\r\n      border: \"4px solid black\",\r\n    },\r\n    card: {\r\n      minWidth: 275,\r\n      flexGrow: 1,\r\n      overflow: \"hidden\",\r\n      padding: theme.spacing(0, 3),\r\n    },\r\n    postContent: {\r\n      textAlign: \"left\",\r\n    },\r\n    commentsCount: {\r\n      borderBottom: \"1px solid\",\r\n    },\r\n    gridList: {\r\n      width: 918,\r\n    },\r\n    responseButtons: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(0.5),\r\n      },\r\n    },\r\n  })\r\n);\r\n\r\nconst Profile: React.FC<ProfileProps> = ({ location }: ProfileProps) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const images = useSelector(getImages);\r\n  const user = location.state.userData;\r\n  const userId = user._id;\r\n  const loggedInUser: IAuthUser | null = useSelector(getUser);\r\n  const userPosts = useSelector(getUserPosts)(userId);\r\n  const profilePicture = useSelector(getProfilePicture)(userId);\r\n  const coverPhoto = useSelector(getCoverPhoto)(userId);\r\n  const isFriendsSelector = useSelector(isFriends);\r\n  const isAddFriendRequestedSelector = useSelector(isAddFriendRequested);\r\n  const isFriendRequestCancelled = useSelector(isCancelled);\r\n  const isFriendRequestAccepted = useSelector(isAccepted);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [openEditProfileModal, setopenEditProfileModal] = useState(false);\r\n  const [friendData, setFriendData] = useState<IFriendRequest>();\r\n  const [cancelledRequest, setCancelledRequest] = useState<IFriendRequest>();\r\n  const [id, setPostId] = useState(\"\");\r\n\r\n  useEffect((): any => {\r\n    dispatch(loadPosts());\r\n    dispatch(loadImages());\r\n    dispatch(loadLikes());\r\n    dispatch(loadUsers());\r\n    dispatch(loadFriends());\r\n  }, [dispatch]);\r\n\r\n  useEffect((): any => {\r\n    if (loggedInUser && loggedInUser._id) {\r\n      let friend = isFriendsSelector({\r\n        requester: loggedInUser._id,\r\n        recipient: userId,\r\n      });\r\n\r\n      if (friend) setFriendData(friend);\r\n      else {\r\n        friend = isAddFriendRequestedSelector({\r\n          requester: userId,\r\n          recipient: loggedInUser._id,\r\n        });\r\n        if (friend) setFriendData(friend);\r\n      }\r\n    }\r\n  }, [loggedInUser, userId, isFriendsSelector, isAddFriendRequestedSelector]);\r\n\r\n  useEffect((): any => {\r\n    if (friendData)\r\n      setCancelledRequest(isFriendRequestCancelled(friendData._id));\r\n  }, [friendData, isFriendRequestCancelled]);\r\n\r\n  useEffect((): any => {\r\n    if (friendData) setFriendData(isFriendRequestAccepted(friendData._id));\r\n  }, [friendData, isFriendRequestAccepted]);\r\n\r\n  const handleEditProfile = () => {\r\n    setopenEditProfileModal(true);\r\n  };\r\n\r\n  const handleAddFriend = () => {\r\n    if (loggedInUser && loggedInUser._id) {\r\n      const data = {\r\n        requester: loggedInUser._id,\r\n        recipient: userId,\r\n        status: \"requested\",\r\n      };\r\n      dispatch(addFriend(data));\r\n    }\r\n  };\r\n\r\n  const handleCancelFriendRequest = () => {\r\n    if (friendData) dispatch(cancelFriendRequest(friendData._id));\r\n  };\r\n\r\n  const handleConfirmFriendRequest = () => {\r\n    if (friendData) dispatch(confirmFriendRequest(friendData._id, \"accepted\"));\r\n  };\r\n\r\n  const displayAddFriendButton = () => {\r\n    if (friendData && !cancelledRequest) {\r\n      return (\r\n        <Grid container justify=\"flex-end\">\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            startIcon={<PersonAddIcon />}\r\n            onClick={handleAddFriend}\r\n          >\r\n            Add Friend\r\n          </Button>\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    if (friendData) {\r\n      if (\r\n        friendData.requester === userId &&\r\n        friendData.status === \"requested\"\r\n      ) {\r\n        return (\r\n          <Grid\r\n            container\r\n            justify=\"flex-end\"\r\n            className={classes.responseButtons}\r\n          >\r\n            <Button\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={handleConfirmFriendRequest}\r\n            >\r\n              Confirm request\r\n            </Button>\r\n            <Button\r\n              color=\"secondary\"\r\n              size=\"small\"\r\n              variant=\"contained\"\r\n              onClick={handleCancelFriendRequest}\r\n            >\r\n              Delete request\r\n            </Button>\r\n          </Grid>\r\n        );\r\n      } else if (\r\n        (friendData.requester === userId || friendData.recipient === userId) &&\r\n        friendData.status === \"accepted\"\r\n      ) {\r\n        return (\r\n          <Grid container justify=\"flex-end\">\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              startIcon={<CancelIcon />}\r\n              onClick={handleCancelFriendRequest}\r\n            >\r\n              Unfriend\r\n            </Button>\r\n          </Grid>\r\n        );\r\n      } else if (\r\n        friendData.requester === userId &&\r\n        friendData.status !== \"requested\"\r\n      ) {\r\n        return (\r\n          <Grid container justify=\"flex-end\">\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              startIcon={<PersonAddIcon />}\r\n              onClick={handleAddFriend}\r\n            >\r\n              Add Friend\r\n            </Button>\r\n          </Grid>\r\n        );\r\n      } else {\r\n        return (\r\n          <Grid container justify=\"flex-end\">\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              startIcon={<CancelIcon />}\r\n              onClick={handleCancelFriendRequest}\r\n            >\r\n              Cancel friend request\r\n            </Button>\r\n          </Grid>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Grid container justify=\"flex-end\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          startIcon={<PersonAddIcon />}\r\n          onClick={handleAddFriend}\r\n        >\r\n          Add Friend\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const displayCoverPhoto = () => {\r\n    if (coverPhoto) {\r\n      return (\r\n        <Box position=\"absolute\" display=\"flex\">\r\n          <GridList cellHeight={400} className={classes.gridList} cols={1}>\r\n            <GridListTile>\r\n              <img alt={coverPhoto.name} src={coverPhoto.url} />\r\n            </GridListTile>\r\n          </GridList>\r\n        </Box>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"md\">\r\n        <div className={classes.root}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <Box\r\n                bgcolor=\"secondary.main\"\r\n                display=\"flex\"\r\n                style={{\r\n                  justifyContent: \"center\",\r\n                  display: \"flex\",\r\n                  height: \"400px\",\r\n                }}\r\n              >\r\n                {displayCoverPhoto()}\r\n                <Box zIndex=\"app bar\" position=\"absolute\">\r\n                  {profilePicture ? (\r\n                    <Avatar\r\n                      className={classes.avatar}\r\n                      alt={profilePicture.name}\r\n                      src={profilePicture.url}\r\n                    />\r\n                  ) : (\r\n                    <Avatar className={classes.avatar}>\r\n                      {getInitials(user.fullName)}\r\n                    </Avatar>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Paper className={classes.paper}>\r\n                <Box pb={3}>\r\n                  <Typography variant=\"h5\">{user.fullName}</Typography>\r\n                </Box>\r\n                <Divider variant=\"fullWidth\" component=\"hr\" />\r\n                <Box pt={2}>\r\n                  {loggedInUser && loggedInUser._id === userId ? (\r\n                    <Button\r\n                      color=\"primary\"\r\n                      startIcon={<EditIcon />}\r\n                      onClick={handleEditProfile}\r\n                    >\r\n                      Edit Profile\r\n                    </Button>\r\n                  ) : (\r\n                    displayAddFriendButton()\r\n                  )}\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n            {loggedInUser && loggedInUser._id === userId && (\r\n              <Grid item xs={12} sm={12}>\r\n                <PostField />\r\n              </Grid>\r\n            )}\r\n\r\n            {/* <Grid item xs={12} sm={6}>\r\n              <Paper className={classes.paper}>xs=12 sm=6</Paper>\r\n            </Grid> */}\r\n            <Grid item xs={12} sm={12}>\r\n              <PostCard\r\n                userId={userId}\r\n                posts={userPosts}\r\n                images={images}\r\n                setPostId={setPostId}\r\n                setOpenModal={setOpenModal}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n      <EditPostModal open={openModal} setOpenModal={setOpenModal} postId={id} />\r\n      <EditProfileModal\r\n        open={openEditProfileModal}\r\n        setopenEditProfileModal={setopenEditProfileModal}\r\n        userId={userId}\r\n        profImage={profilePicture ? profilePicture : {}}\r\n        cover={coverPhoto ? coverPhoto : {}}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\postCards.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\editProfileModal.tsx",["173","174"],"import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  createStyles,\r\n  Theme,\r\n  withStyles,\r\n  WithStyles,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport PhotoIcon from \"@material-ui/icons/Photo\";\r\nimport { storage } from \"../firebase.config\";\r\nimport { updateUserProfPic, updateUserCoverPhoto } from \"../store/users\";\r\nimport { IProfPic } from \"../interfaces/profPic\";\r\nimport { IImageData } from \"../interfaces/images\";\r\n\r\nconst styles = (theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: 0,\r\n      padding: theme.spacing(2),\r\n    },\r\n    closeButton: {\r\n      position: \"absolute\",\r\n      right: theme.spacing(1),\r\n      top: theme.spacing(1),\r\n      color: theme.palette.grey[500],\r\n    },\r\n    grid: {\r\n      minWidth: 275,\r\n      flexGrow: 1,\r\n      overflow: \"hidden\",\r\n      padding: theme.spacing(0, 3),\r\n    },\r\n  });\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grid: {\r\n      minWidth: 275,\r\n      flexGrow: 1,\r\n      overflow: \"hidden\",\r\n      padding: theme.spacing(0, 3),\r\n    },\r\n    paper: {\r\n      // maxWidth: 400,\r\n      margin: `${theme.spacing(1)}px auto`,\r\n      padding: theme.spacing(2),\r\n    },\r\n    postContent: {\r\n      textAlign: \"left\",\r\n    },\r\n    avatar: {\r\n      width: 180,\r\n      height: 180,\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    box: {\r\n      justifyContent: \"center\",\r\n    },\r\n    div: {\r\n      display: \"flex\",\r\n    },\r\n    gridList: {\r\n      width: 700,\r\n    },\r\n  })\r\n);\r\n\r\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\r\n  id: string;\r\n  children: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme: Theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme: Theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport interface EditProfileModalProps {\r\n  open: boolean;\r\n  userId: string;\r\n  profImage: IProfPic;\r\n  cover?: IImageData;\r\n  setopenEditProfileModal: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nconst EditProfileModal: React.FC<EditProfileModalProps> = ({\r\n  open,\r\n  userId,\r\n  profImage,\r\n  cover,\r\n  setopenEditProfileModal,\r\n}: EditProfileModalProps) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [profilePicture, setProfilePicture] = useState<IProfPic>();\r\n  const [imageData, setImageData] = useState<object[]>();\r\n\r\n  const handleClose = () => {\r\n    setopenEditProfileModal(false);\r\n  };\r\n\r\n  const handleImageUpload = async (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    category: string\r\n  ) => {\r\n    const imageInfo: object[] = [];\r\n    if (e.target.files !== null) {\r\n      for (let i = 0; i < e.target.files.length; i++) {\r\n        const file = e.target.files[i];\r\n        const data: IImageData = await uploadImage(file);\r\n        if (category === \"avatar\") {\r\n          setProfilePicture(data);\r\n          dispatch(updateUserProfPic(userId, data));\r\n          imageInfo.push(data);\r\n        } else {\r\n          dispatch(updateUserCoverPhoto(userId, data));\r\n        }\r\n      }\r\n    }\r\n    setImageData(imageInfo);\r\n  };\r\n\r\n  const uploadImage = (\r\n    imageFile: Blob | Uint8Array | ArrayBuffer\r\n  ): Promise<IImageData> => {\r\n    return new Promise((resolve, reject) => {\r\n      let currentImageName = `firebase-image-${Date.now()}-${userId}`;\r\n      let uploadImage = storage\r\n        .ref(`images/${currentImageName}`)\r\n        .put(imageFile);\r\n\r\n      uploadImage.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          var progress =\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n          console.log(\"Upload is \" + progress + \"% done\");\r\n        },\r\n        (error) => reject(error),\r\n        () => {\r\n          storage\r\n            .ref(\"images\")\r\n            .child(currentImageName)\r\n            .getDownloadURL()\r\n            .then((url) => {\r\n              resolve({\r\n                name: currentImageName,\r\n                url,\r\n              });\r\n            });\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        // onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Edit Profile\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <Grid container wrap=\"nowrap\" spacing={2}>\r\n                <Grid item container justify=\"flex-start\" xs={6}>\r\n                  <Typography variant=\"h5\">Profile Picture</Typography>\r\n                </Grid>\r\n                <Grid item container justify=\"flex-end\" xs={6}>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"avatar-upload\"\r\n                    type=\"file\"\r\n                    onChange={(e) => handleImageUpload(e, \"avatar\")}\r\n                  />\r\n                  <label htmlFor=\"avatar-upload\">\r\n                    <Button\r\n                      // variant=\"contained\"\r\n                      color=\"primary\"\r\n                      component=\"span\"\r\n                      size=\"small\"\r\n                      startIcon={<PhotoIcon />}\r\n                    >\r\n                      Photo\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n              </Grid>\r\n              <Box\r\n                bgcolor=\"secondary.main\"\r\n                p={5}\r\n                display=\"flex\"\r\n                className={classes.box}\r\n              >\r\n                <Avatar\r\n                  className={classes.avatar}\r\n                  alt={profImage.name}\r\n                  src={profImage.url}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Grid container wrap=\"nowrap\" spacing={2}>\r\n                <Grid item container justify=\"flex-start\" xs={6}>\r\n                  <Typography variant=\"h5\">Cover Photo</Typography>\r\n                </Grid>\r\n                <Grid item container justify=\"flex-end\" xs={6}>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id=\"cover-upload\"\r\n                    type=\"file\"\r\n                    onChange={(e) => handleImageUpload(e, \"cover\")}\r\n                  />\r\n                  <label htmlFor=\"cover-upload\">\r\n                    <Button\r\n                      // variant=\"contained\"\r\n                      color=\"primary\"\r\n                      component=\"span\"\r\n                      size=\"small\"\r\n                      startIcon={<PhotoIcon />}\r\n                    >\r\n                      Photo\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n              </Grid>\r\n              <Box\r\n                bgcolor=\"secondary.main\"\r\n                p={5}\r\n                display=\"flex\"\r\n                className={classes.box}\r\n              >\r\n                {cover ? (\r\n                  // <div className={classes.div}>\r\n                  <GridList\r\n                    cellHeight={300}\r\n                    className={classes.gridList}\r\n                    cols={1}\r\n                  >\r\n                    <GridListTile>\r\n                      <img alt={cover.name} src={cover.url} />\r\n                    </GridListTile>\r\n                  </GridList>\r\n                ) : (\r\n                  // </div>\r\n                  <AccountBoxIcon className={classes.avatar} />\r\n                )}\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus color=\"primary\">\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfileModal;\r\n","C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\users.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\root.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\postField.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\profileAvatar.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\deleteModal.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\search.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\services\\searchFriendService.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\friendList.tsx",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\store\\friends.ts",[],"C:\\Users\\Neil John\\Documents\\social-media-app-client\\src\\components\\common\\notifications.tsx",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":19,"column":10,"nodeType":"181","messageId":"182","endLine":19,"endColumn":23},{"ruleId":"179","severity":1,"message":"183","line":27,"column":3,"nodeType":"181","messageId":"182","endLine":27,"endColumn":13},{"ruleId":"179","severity":1,"message":"184","line":139,"column":10,"nodeType":"181","messageId":"182","endLine":139,"endColumn":24},{"ruleId":"179","severity":1,"message":"185","line":140,"column":10,"nodeType":"181","messageId":"182","endLine":140,"endColumn":19},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"@typescript-eslint/no-unused-vars","'userLoggedOut' is defined but never used.","Identifier","unusedVar","'getFriends' is defined but never used.","'profilePicture' is assigned a value but never used.","'imageData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]